upper = exp(est.log.or + 1.96 * std.log.or)
)
ATE_composite_MI <- lapply(imputed_data, function(d) {
tmp1 <- sapply(c("gestational", "obstetrical"), function(outc) {
.glm <- glm(
paste0(outc, " ~ taxolpreg"),
family = binomial,
data = d,
weights = ps_data$w_taxol_mw
)
.log_odds <- summary(.glm)$coefficients["taxolpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["taxolpreg", "taxolpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "taxane")
tmp2 <- sapply(c("gestational", "obstetrical"), function(outc) {
.glm <- glm(
paste0(outc, " ~ gfpreg"),
family = binomial,
data = d,
weights = ps_data$w_gcsf_mw
)
.log_odds <- summary(.glm)$coefficients["gfpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["gfpreg", "gfpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "CSF")
return(rbind(tmp1, tmp2))
}) %>%
rbindlist(., idcol = "Iter") %>%
group_by(Treatment, Outcome) %>%
summarise(
est.log.or = PoolEstimates(log.or, log.or.var)[1],
std.log.or = sqrt(PoolEstimates(log.or, log.or.var)[2])
) %>%
mutate(
est.or = exp(est.log.or),
lower = exp(est.log.or - 1.96 * std.log.or),
upper = exp(est.log.or + 1.96 * std.log.or)
)
ATE_gcsf_MI
ATE_composite_MI
ATE_taxol_MI
lapply(imputed_data, function(d) { # iterate over 10 imputed datasets
# taxane
tmp1 <- sapply(c("gestational", "obstetrical"), function(outc) {
# for each composite outcome, build glm, calculate odds ratio, 95% CI
.glm <- glm(
paste0(outc, " ~ taxolpreg"),
family = binomial,
data = d,
weights = ps_data$w_taxol_mw
)
.log_odds <- summary(.glm)$coefficients["taxolpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["taxolpreg", "taxolpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "taxane")
# GCSF
tmp2 <- sapply(c("gestational", "obstetrical"), function(outc) {
.glm <- glm(
paste0(outc, " ~ gfpreg"),
family = binomial,
data = d,
weights = ps_data$w_gcsf_mw
)
.log_odds <- summary(.glm)$coefficients["gfpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["gfpreg", "gfpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "CSF")
return(rbind(tmp1, tmp2)) # combine taxane and GCSF
}) %>%
rbindlist(., idcol = "Iter")
ATE_composite
ATE_composite <- sapply(c("obstetrical", "gestational", "obstetrical_sens", "gestational_sens"), function(outc) {
sapply(c("taxolpreg", "gfpreg"), function(trt) {
w <<- if (trt == "taxolpreg") ps_data$w_taxol_mw else ps_data$w_gcsf_mw
# outc ~ trt
.glm <- glm(
formula = paste0(outc, " ~ ", trt),
family = binomial,
data = ps_data,
weights = w
)
# extract coefs
.log_odds <- summary(.glm)$coefficients[trt, "Estimate"]
.log_odds_var <- sandwich(.glm)[trt, trt]
return(data.frame(
est.log.or = .log_odds,
std.log.or = sqrt(.log_odds_var))
)
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Treatment")
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(
est.or = exp(est.log.or),
lower = exp(est.log.or - 1.96 * std.log.or),
upper = exp(est.log.or + 1.96 * std.log.or)
) %>%
arrange(Treatment, Outcome)
ATE_composite
ATE_composite %>%
filter(Treatment == "taxolpreg" & str_detect(Outcome, "^obstetrical"))
ATE_composite_MI
ATE_composite %>%
filter(Treatment == "taxolpreg" & str_detect(Outcome, "^obstetrical")) %>%
select(Outcome, Treatment, est.or, lower, upper) %>%
base::rbind(
ATE_composite_MI %>%
filter(Treatment == "taxane" & Outcome == "obstetrical") %>%
select(est.or, lower, upper)
)
ATE_composite_MI %>% select(Outcome, Treatment)
class(ATE_composite_MI)
ATE_composite_MI <- lapply(imputed_data, function(d) { # iterate over 10 imputed datasets
# taxane
tmp1 <- sapply(c("gestational", "obstetrical"), function(outc) {
# for each composite outcome, build glm, calculate odds ratio, 95% CI
.glm <- glm(
paste0(outc, " ~ taxolpreg"),
family = binomial,
data = d,
weights = ps_data$w_taxol_mw
)
.log_odds <- summary(.glm)$coefficients["taxolpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["taxolpreg", "taxolpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "taxane")
# GCSF
tmp2 <- sapply(c("gestational", "obstetrical"), function(outc) {
.glm <- glm(
paste0(outc, " ~ gfpreg"),
family = binomial,
data = d,
weights = ps_data$w_gcsf_mw
)
.log_odds <- summary(.glm)$coefficients["gfpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["gfpreg", "gfpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "CSF")
return(rbind(tmp1, tmp2)) # combine taxane and GCSF
}) %>%
rbindlist(., idcol = "Iter") %>%
group_by(Treatment, Outcome) %>% # combine results from 10 imputed datasets
summarise(
est.log.or = PoolEstimates(log.or, log.or.var)[1],
std.log.or = sqrt(PoolEstimates(log.or, log.or.var)[2])
) %>%
mutate(
est.or = exp(est.log.or), # convert from coef to odds ratio
lower = exp(est.log.or - 1.96 * std.log.or),
upper = exp(est.log.or + 1.96 * std.log.or)
) %>%
as.data.frame()
ATE_composite_MI
ATE_composite_MI %>% select(Outcome, Treatment)
names(ATE_composite_MI)
ATE_composite_MI %>% dplyr::select(Outcome, Treatment)
select <- dplyr::select
rbind <- base::rbind
ATE_composite_MI <- lapply(imputed_data, function(d) { # iterate over 10 imputed datasets
# taxane
tmp1 <- sapply(c("gestational", "obstetrical"), function(outc) {
# for each composite outcome, build glm, calculate odds ratio, 95% CI
.glm <- glm(
paste0(outc, " ~ taxolpreg"),
family = binomial,
data = d,
weights = ps_data$w_taxol_mw
)
.log_odds <- summary(.glm)$coefficients["taxolpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["taxolpreg", "taxolpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "taxane")
# GCSF
tmp2 <- sapply(c("gestational", "obstetrical"), function(outc) {
.glm <- glm(
paste0(outc, " ~ gfpreg"),
family = binomial,
data = d,
weights = ps_data$w_gcsf_mw
)
.log_odds <- summary(.glm)$coefficients["gfpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["gfpreg", "gfpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "CSF")
return(rbind(tmp1, tmp2)) # combine taxane and GCSF
}) %>%
rbindlist(., idcol = "Iter") %>%
group_by(Treatment, Outcome) %>% # combine results from 10 imputed datasets
summarise(
est.log.or = PoolEstimates(log.or, log.or.var)[1],
std.log.or = sqrt(PoolEstimates(log.or, log.or.var)[2])
) %>%
mutate(
est.or = exp(est.log.or), # convert from coef to odds ratio
lower = exp(est.log.or - 1.96 * std.log.or),
upper = exp(est.log.or + 1.96 * std.log.or)
)
ATE_composite %>%
filter(Treatment == "taxolpreg" & str_detect(Outcome, "^obstetrical")) %>%
select(Outcome, est.or, lower, upper) %>%
rbind(
ATE_composite_MI %>%
filter(Treatment == "taxane" & Outcome == "obstetrical") %>%
mutate(Outcome = "imputed_obstetrical") %>%
select(Outcome, est.or, lower, upper)
)
ATE_composite_MI <- lapply(imputed_data, function(d) { # iterate over 10 imputed datasets
# taxane
tmp1 <- sapply(c("gestational", "obstetrical"), function(outc) {
# for each composite outcome, build glm, calculate odds ratio, 95% CI
.glm <- glm(
paste0(outc, " ~ taxolpreg"),
family = binomial,
data = d,
weights = ps_data$w_taxol_mw
)
.log_odds <- summary(.glm)$coefficients["taxolpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["taxolpreg", "taxolpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "taxane")
# GCSF
tmp2 <- sapply(c("gestational", "obstetrical"), function(outc) {
.glm <- glm(
paste0(outc, " ~ gfpreg"),
family = binomial,
data = d,
weights = ps_data$w_gcsf_mw
)
.log_odds <- summary(.glm)$coefficients["gfpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["gfpreg", "gfpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "CSF")
return(rbind(tmp1, tmp2)) # combine taxane and GCSF
}) %>%
rbindlist(., idcol = "Iter") %>%
group_by(Treatment, Outcome) %>% # combine results from 10 imputed datasets
summarise(
est.log.or = PoolEstimates(log.or, log.or.var)[1],
std.log.or = sqrt(PoolEstimates(log.or, log.or.var)[2])
) %>%
mutate(
est.or = exp(est.log.or), # convert from coef to odds ratio
lower = exp(est.log.or - 1.96 * std.log.or),
upper = exp(est.log.or + 1.96 * std.log.or)
) %>%
as.data.frame()
ATE_composite %>%
filter(Treatment == "taxolpreg" & str_detect(Outcome, "^obstetrical")) %>%
select(Outcome, est.or, lower, upper) %>%
rbind(
ATE_composite_MI %>%
filter(Treatment == "taxane" & Outcome == "obstetrical") %>%
mutate(Outcome = "imputed_obstetrical") %>%
select(Outcome, est.or, lower, upper)
)
kable <- knitr::kable
# For taxane
# taxane and obstetrical
ATE_composite %>%
filter(Treatment == "taxolpreg" & str_detect(Outcome, "^obstetrical")) %>%
select(Outcome, est.or, lower, upper) %>%
rbind(
ATE_composite_MI %>%
filter(Treatment == "taxane" & Outcome == "obstetrical") %>%
mutate(Outcome = "imputed_obstetrical") %>%
select(Outcome, est.or, lower, upper)
) %>%
kable(digits = 2, col.names = c("Outcome", "Estimated odds ratio", "Lower 95% CI", "Upper 95% CI"),
caption = "Estimated odds ratio for taxane chemotherapy on composite obstetrical outcomes") %>%
kable_classic(full_width = F, position = "center", latex_options = "scale_down", font_size = 12)
ATE_composite_MI
ATE_composite
ATE_composite_MI <- lapply(imputed_data, function(d) { # iterate over 10 imputed datasets
# taxane
tmp1 <- sapply(c("gestational", "obstetrical"), function(outc) {
# for each composite outcome, build glm, calculate odds ratio, 95% CI
.glm <- glm(
paste0(outc, " ~ taxolpreg"),
family = binomial,
data = d,
weights = ps_data$w_taxol_mw
)
.log_odds <- summary(.glm)$coefficients["taxolpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["taxolpreg", "taxolpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "taxolpreg")
# GCSF
tmp2 <- sapply(c("gestational", "obstetrical"), function(outc) {
.glm <- glm(
paste0(outc, " ~ gfpreg"),
family = binomial,
data = d,
weights = ps_data$w_gcsf_mw
)
.log_odds <- summary(.glm)$coefficients["gfpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["gfpreg", "gfpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "gfpreg")
return(rbind(tmp1, tmp2)) # combine taxane and GCSF
}) %>%
rbindlist(., idcol = "Iter") %>%
group_by(Treatment, Outcome) %>% # combine results from 10 imputed datasets
summarise(
est.log.or = PoolEstimates(log.or, log.or.var)[1],
std.log.or = sqrt(PoolEstimates(log.or, log.or.var)[2])
) %>%
mutate(
est.or = exp(est.log.or), # convert from coef to odds ratio
lower = exp(est.log.or - 1.96 * std.log.or),
upper = exp(est.log.or + 1.96 * std.log.or)
) %>%
as.data.frame() %>%
rename(obstetrical_imputed = obstetrical,
gestational_imputed = gestational)
ATE_composite_MI <- lapply(imputed_data, function(d) { # iterate over 10 imputed datasets
# taxane
tmp1 <- sapply(c("gestational", "obstetrical"), function(outc) {
# for each composite outcome, build glm, calculate odds ratio, 95% CI
.glm <- glm(
paste0(outc, " ~ taxolpreg"),
family = binomial,
data = d,
weights = ps_data$w_taxol_mw
)
.log_odds <- summary(.glm)$coefficients["taxolpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["taxolpreg", "taxolpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "taxolpreg")
# GCSF
tmp2 <- sapply(c("gestational", "obstetrical"), function(outc) {
.glm <- glm(
paste0(outc, " ~ gfpreg"),
family = binomial,
data = d,
weights = ps_data$w_gcsf_mw
)
.log_odds <- summary(.glm)$coefficients["gfpreg", "Estimate"]
.log_odds_var <- sandwich(.glm)["gfpreg", "gfpreg"]
return(data.frame(
log.or = .log_odds,
log.or.var = .log_odds_var
))
}, simplify = FALSE, USE.NAMES = TRUE) %>%
rbindlist(., idcol = "Outcome") %>%
mutate(Treatment = "gfpreg")
return(rbind(tmp1, tmp2)) # combine taxane and GCSF
}) %>%
rbindlist(., idcol = "Iter") %>%
group_by(Treatment, Outcome) %>% # combine results from 10 imputed datasets
summarise(
est.log.or = PoolEstimates(log.or, log.or.var)[1],
std.log.or = sqrt(PoolEstimates(log.or, log.or.var)[2])
) %>%
mutate(
est.or = exp(est.log.or), # convert from coef to odds ratio
lower = exp(est.log.or - 1.96 * std.log.or),
upper = exp(est.log.or + 1.96 * std.log.or)
) %>%
as.data.frame() %>%
mutate(Outcome = ifelse(Outcome == "obstetrical",
"obstetrical_imputed",
"gestational_imputed")
)
ATE_composite_MI
ATE_overall <- rbind(ATE_composite %>%
select(Outcome, Treatment, est.or, lower, upper),
ATE_composite_MI %>%
select(Outcome, Treatment, est.or, lower, upper))
ATE_overall
# For taxane
# taxane and obstetrical
ATE_overall %>%
filter(Treatment == "taxolpreg" & str_detect(Outcome, "^obs")) %>%
kable(digits = 2, col.names = c("Outcome", "Estimated odds ratio", "Lower 95% CI", "Upper 95% CI"),
caption = "Estimated odds ratio for taxane chemotherapy on composite obstetrical outcomes") %>%
kable_classic(full_width = F, position = "center", latex_options = "scale_down", font_size = 12)
# For taxane
# taxane and obstetrical
ATE_overall %>%
filter(Treatment == "taxolpreg" & str_detect(Outcome, "^obs")) %>%
select(Outcome, est.or, lower, upper) %>%
kable(digits = 2, col.names = c("Outcome", "Estimated odds ratio", "Lower 95% CI", "Upper 95% CI"),
caption = "Estimated odds ratio for taxane chemotherapy on composite obstetrical outcomes") %>%
kable_classic(full_width = F, position = "center", latex_options = "scale_down", font_size = 12)
knitr::opts_chunk$set(include = TRUE, warning = FALSE, message = FALSE, echo = FALSE)
packages_list <- c(
"data.table", "tidyverse", "kableExtra", "PSW",
"MASS", "splines", "mice"
) # 'MatchIt',
new_packages <- packages_list[
!(packages_list %in% installed.packages()[, "Package"])
]
if (length(new_packages)) install.packages(new_packages)
suppressMessages(lapply(packages_list, library, character.only = TRUE))
suppressMessages(lapply(packages_list, library, character.only = TRUE))
select <- dplyr::select
rbind <- base::rbind
kable <- knitr::kable
project_folder <- file.path(
"/Users/sren/Dropbox (Partners HealthCare)/BOC shared",
"Chemo during pregnancy (Sella)"
)
# load functions needed
source(file.path(project_folder, "r", "functions.R"))
list.files(project_folder)
project_folder <- file.path(
"/Users/sren/Dropbox (Partners HealthCare)/BOC shared",
"Chemo during pregnancy (Sella)"
)
list.files(project_folder)
list.files(file.path(project_folder), "r")
list.files(file.path(project_folder, "r"))
setwd(file.path)
setwd(project_folder)
getwd()
project_folder <- file.path(
"/Users/siyangren/Dropbox (Partners HealthCare)/BOC shared",
"Chemo during pregnancy (Sella)"
)
# load functions needed
source(file.path(project_folder, "r", "functions.R"))
rm(list=ls())
library(data.table)
library(tidyverse)
data_path <- "/Users/siyangren/Dropbox (Partners HealthCare)/
BOC shared/Chemo during pregnancy (Sella)/data/2020-12-9"
redcap_data <- fread(file.path(
data_path, "RegistryOfPregnancyA_DATA_2020-12-09_1650.csv"
))
redcap_data <- fread(file.path(
data_path, "RegistryOfPregnancyA_DATA_2020-12-09_1650.csv"
))
names(redcap_data)
rm(list=ls())
library(data.table)
library(tidyverse)
data_path <- "/Users/siyangren/Dropbox (Partners HealthCare)/
BOC shared/Chemo during pregnancy (Sella)/data/2020-12-9"
redcap_data <- fread(file.path(
data_path, "RegistryOfPregnancyA_DATA_2020-12-09_1650.csv"
))
redcap_data <- read.csv(file.path(
data_path, "RegistryOfPregnancyA_DATA_2020-12-09_1650.csv"
))
list.files(data_path)
getwd()
list.files(data_path)
